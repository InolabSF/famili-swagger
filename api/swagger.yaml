swagger: "2.0"
info:
  description: "Fammili is a stress-free weekend planner that allows you to enjoy casual and affordable weekends.\n- [heroku](https://famili-app.herokuapp.com)\n- [github](https://github.com/InolabSF/famili-server)"
  version: "0.1.0"
  title: "fammili-server"
  termsOfService: ""
  contact:
    email: "kenzan.hase@isidentsu.com"
host: "fammili-app.herokuapp.com"
basePath: "/"
tags:
- name: "APIs"
  description: ""
schemes:
- "https"
paths:
  /activity:
    get:
      tags:
      - "/activity"
      summary: "API serving json about one activity."
      description: ""
      operationId: "ActivityController#get_activity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "activity_id"
        in: "query"
        description: "Activity#id"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid activity_id"
  /activities:
    get:
      tags:
      - "/activities"
      summary: "API serving json about cards that Fammili recommends to user."
      description: ""
      operationId: "ActivityController#get_activities"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      - name: "timestamp"
        in: "query"
        description: "unix timestamp.\n\n- When timestamp parameter is null: Tutorial (Activities that are Delivery#start_date = NULL && Delivery#end_date = NULL and Delivery#activity_id = Activity#id are delivered.)\n- Else: Activities that Fammili suggests to user."
        required: false
        type: "integer"
      responses:
        401:
          description: "Unauthorized - invalid Authorization header"
  /user:
    get:
      tags:
      - "/user"
      summary: "API serving json about one user."
      description: ""
      operationId: "UserController#get_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      responses:
        401:
          description: "Unauthorized - invalid Authorization header"
    post:
      tags:
      - "/user"
      summary: "API creating or updating a user."
      description: ""
      operationId: "UserController#post_user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      responses:
        401:
          description: "Unauthorized - invalid Authorization header"
  "/user/interest":
    post:
      tags:
      - "/user/interest"
      summary: "API creating a model that describes if a user is interested in an activity or not."
      description: ""
      operationId: "UserController#post_user_interest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      - name: "activity_id"
        in: "query"
        description: "Activity#id"
        required: true
        type: "integer"
      - name: "value"
        in: "query"
        description: "- 1: interested\n- 0: not interested"
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid value or activity_id"
        401:
          description: "Unauthorized - invalid Authorization header"
  "/user/rating":
    post:
      tags:
      - "/user/rating"
      summary: "API creating a model that describes rating of activity a user did or did not."
      description: ""
      operationId: "UserController#post_user_rating"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      - name: "activity_id"
        in: "query"
        description: "Activity#id"
        required: true
        type: "integer"
      - name: "value"
        in: "query"
        description: "- 0~5: rating score\n- lesser than 0: did not do the activity"
        required: true
        type: "integer"
      - name: "cancel_id"
        in: "query"
        description: "Cancel#id"
        required: false
        type: "integer"
      - name: "timestamp"
        in: "query"
        description: "unix timestamp of activity's start date."
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid timestamp or value or cancel_id or activity_id"
        401:
          description: "Unauthorized - invalid Authorization header"
  "/user/plan/replace":
    post:
      tags:
      - "/user/plan/replace"
      summary: "API replacing a user's plan to another plan."
      description: ""
      operationId: "UserController#post_user_plan_replace"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      - name: "cancel_id"
        in: "query"
        description: "Cancel#id"
        required: false
        type: "integer"
      - name: "timestamp"
        in: "query"
        description: "unix timestamp of activity's start date."
        required: true
        type: "integer"
      responses:
        400:
          description: "Invalid timestamp or cancel_id. The user doesn't have any plans on the timestamp date."
        401:
          description: "Unauthorized - invalid Authorization header"
  "/user/schedule_version":
    get:
      tags:
      - "/user/schedule_version"
      summary: "API serving info about User#schedule_version."
      description: ""
      operationId: "UserController#get_user_schedule_version"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      responses:
        401:
          description: "Unauthorized - invalid Authorization header"
  "/user/device_token":
    post:
      tags:
      - "/user/device_token"
      summary: "API updating User#device_token."
      description: ""
      operationId: "UserController#post_user_device_token"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "firebase idToken: https://firebase.google.com/docs/database/rest/auth#firebase_id_tokens"
        required: true
        type: "string"
      - name: "device_token"
        in: "query"
        description: "device token for push notification."
        required: false
        type: "string"
      responses:
        400:
          description: "Unauthorized - invalid device_token"
        401:
          description: "Unauthorized - invalid Authorization header"
definitions:
  Delivery:
    type: "object"
    description: "Activity that Fammili suggests to users. If both start_date and end_date are nil, it is delivered when tutorial."
    properties:
      id:
        type: "integer"
      activity_id:
        type: "integer"
        description: "Activity#id"
      start_date:
        type: "string"
        format: "datetime"
        description: "date: when delivery starts."
      end_date:
        type: "string"
        format: "datetime"
        description: "date: when delivery ends."
  Plan:
    type: "object"
    description: "Plan type how user spends a day."
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        description: "Plan's name. e.g. 'Activity', 'Coming Soon', 'Busy', 'EMPTY', etc."
  Cancel:
    type: "object"
    description: "Reason why user canceled activity."
    properties:
      id:
        type: "integer"
      name:
        type: "string"
        description: "Cancellation reason's name. e.g. 'Weather Condition', 'Not in the mood', 'Kids are not in the mood', 'Too expensive', 'Too far', 'Already have a plan', 'Other', etc"
  Activity:
    type: "object"
    properties:
      id:
        type: "integer"
      plan_id:
        type: "integer"
        description: "Plan#id"
      name:
        type: "string"
      desc:
        type: "string"
      url:
        type: "string"
        format: "url string"
  ActivityImage:
    type: "object"
    description: "This image belongs to activity. activity has many activity_images."
    properties:
      id:
        type: "integer"
      activity_id:
        type: "integer"
        description: "Activity#id"
      url:
        type: "string"
        format: "url string"
        description: "url of the image"
  ActivityFeature:
    type: "object"
    description: "This feature belongs to activity. activity has one activity_feature."
    properties:
      id:
        type: "integer"
      activity_id:
        type: "integer"
        description: "Activity#id"
      cost:
        type: "integer"
      fuel:
        type: "integer"
      age:
        type: "integer"
      distance:
        type: "integer"
  ActivityHour:
    type: "object"
    description: "This hour belongs to activity. activity has many activity_hours."
    properties:
      id:
        type: "integer"
      activity_id:
        type: "integer"
        description: "Activity#id"
      start_date:
        type: "string"
        format: "datetime"
      end_date:
        type: "string"
        format: "datetime"
  UserInterest:
    type: "object"
    description: "Log a user was intrested in an activity."
    properties:
      id:
        type: "integer"
      user_id:
        type: "integer"
        description: "User#id"
      activity_id:
        type: "integer"
        description : "Activity#id"
      value:
        type: "integer"
        description: "- 0: The user isn't interested in the activity.\n- 1: The user is interested in the activity."
  UserRating:
    type: "object"
    description: "Log a user made a rating to an activity."
    properties:
      id:
        type: "integer"
      user_id:
        type: "integer"
        description: "User#id"
      activity_id:
        type: "integer"
        description : "Activity#id"
      value:
        type: "integer"
        description: "- 0-5: rating score.\n- -1: the user hasn't done the activity."
      cancel_id:
        type: "integer"
        description: "- nil: if the user has done the activity.\n- Cancel#id: if user hasn't done the activity."
  UserCancel:
    type: "object"
    description: "Log a user canceled doing an activity."
    properties:
      id:
        type: "integer"
      user_id:
        type: "integer"
        description: "User#id"
      activity_id:
        type: "integer"
        description : "Activity#id"
      cancel_id:
        type: "integer"
        description: "Cancel#id"
  UserPlan:
    description: "How user spends a day"
    type: "object"
    properties:
      id:
        type: "integer"
      user_id:
        type: "integer"
        description: "User#id"
      plan_id:
        type: "integer"
        description: "Plan#id"
      activity_id:
        type: "integer"
        description : "- nil: when the user doesn't have any activities on the date.\n- Activity#id: when the plan is an activity."
      date:
        type: "string"
        format: "datetime"